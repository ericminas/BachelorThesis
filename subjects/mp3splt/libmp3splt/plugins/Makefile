# Makefile.in generated by automake 1.16.5 from Makefile.am.
# plugins/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2021 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/libmp3splt
pkgincludedir = $(includedir)/libmp3splt
pkglibdir = $(libdir)/libmp3splt
pkglibexecdir = $(libexecdir)/libmp3splt
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
#am__append_1 = -lz -lws2_32 -lintl

#mp3 plugin
am__append_2 = libsplt_mp3.la
am__append_3 = -I/home/l1/Desktop/Thesis/Subjects/mp3splt/libmp3splt/target/include
#am__append_4 = -DNO_ID3TAG

#OGG plugin
am__append_5 = libsplt_ogg.la

#FLAC plugin
am__append_6 = libsplt_flac.la
subdir = plugins
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/cutter.m4 \
	$(top_srcdir)/m4/id3.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltargz.m4 $(top_srcdir)/m4/ltdl.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/mad.m4 $(top_srcdir)/m4/ogg.m4 \
	$(top_srcdir)/m4/vorbis.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(plugindir)"
LTLIBRARIES = $(plugin_LTLIBRARIES)
libsplt_flac_la_LIBADD =
am__libsplt_flac_la_SOURCES_DIST = flac_frame_reader.c \
	flac_frame_reader.h flac_utils.c flac_utils.h \
	from_flac_library.c from_flac_library.h flac.c flac.h \
	flac_metadata_utils.c flac_metadata_utils.h flac_metadata.c \
	flac_metadata.h flac_tags.c flac_tags.h flac_silence.c \
	flac_silence.h silence_processors.c silence_processors.h md5.c \
	md5.h flac_md5_decoder.c flac_md5_decoder.h
am_libsplt_flac_la_OBJECTS =  \
	libsplt_flac_la-flac_frame_reader.lo \
	libsplt_flac_la-flac_utils.lo \
	libsplt_flac_la-from_flac_library.lo \
	libsplt_flac_la-flac.lo \
	libsplt_flac_la-flac_metadata_utils.lo \
	libsplt_flac_la-flac_metadata.lo \
	libsplt_flac_la-flac_tags.lo \
	libsplt_flac_la-flac_silence.lo \
	libsplt_flac_la-silence_processors.lo \
	libsplt_flac_la-md5.lo \
	libsplt_flac_la-flac_md5_decoder.lo
libsplt_flac_la_OBJECTS = $(am_libsplt_flac_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
libsplt_flac_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(libsplt_flac_la_LDFLAGS) $(LDFLAGS) \
	-o $@
am_libsplt_flac_la_rpath = -rpath $(plugindir)
libsplt_mp3_la_DEPENDENCIES =
am__libsplt_mp3_la_SOURCES_DIST = mp3.c mp3.h mp3_silence.c \
	mp3_silence.h mp3_utils.c mp3_utils.h silence_processors.c \
	silence_processors.h
am_libsplt_mp3_la_OBJECTS = libsplt_mp3_la-mp3.lo \
	libsplt_mp3_la-mp3_silence.lo \
	libsplt_mp3_la-mp3_utils.lo \
	libsplt_mp3_la-silence_processors.lo
libsplt_mp3_la_OBJECTS = $(am_libsplt_mp3_la_OBJECTS)
libsplt_mp3_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(libsplt_mp3_la_LDFLAGS) $(LDFLAGS) -o \
	$@
am_libsplt_mp3_la_rpath = -rpath $(plugindir)
libsplt_ogg_la_LIBADD =
am__libsplt_ogg_la_SOURCES_DIST = ogg.c ogg.h ogg_silence.c \
	ogg_silence.h ogg_utils.c ogg_utils.h silence_processors.c \
	silence_processors.h ogg_new_stream_handler.c \
	ogg_new_stream_handler.h
am_libsplt_ogg_la_OBJECTS = libsplt_ogg_la-ogg.lo \
	libsplt_ogg_la-ogg_silence.lo \
	libsplt_ogg_la-ogg_utils.lo \
	libsplt_ogg_la-silence_processors.lo \
	libsplt_ogg_la-ogg_new_stream_handler.lo
libsplt_ogg_la_OBJECTS = $(am_libsplt_ogg_la_OBJECTS)
libsplt_ogg_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(libsplt_ogg_la_LDFLAGS) $(LDFLAGS) -o \
	$@
am_libsplt_ogg_la_rpath = -rpath $(plugindir)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/libltdl/config/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/libsplt_flac_la-flac.Plo \
	./$(DEPDIR)/libsplt_flac_la-flac_frame_reader.Plo \
	./$(DEPDIR)/libsplt_flac_la-flac_md5_decoder.Plo \
	./$(DEPDIR)/libsplt_flac_la-flac_metadata.Plo \
	./$(DEPDIR)/libsplt_flac_la-flac_metadata_utils.Plo \
	./$(DEPDIR)/libsplt_flac_la-flac_silence.Plo \
	./$(DEPDIR)/libsplt_flac_la-flac_tags.Plo \
	./$(DEPDIR)/libsplt_flac_la-flac_utils.Plo \
	./$(DEPDIR)/libsplt_flac_la-from_flac_library.Plo \
	./$(DEPDIR)/libsplt_flac_la-md5.Plo \
	./$(DEPDIR)/libsplt_flac_la-silence_processors.Plo \
	./$(DEPDIR)/libsplt_mp3_la-mp3.Plo \
	./$(DEPDIR)/libsplt_mp3_la-mp3_silence.Plo \
	./$(DEPDIR)/libsplt_mp3_la-mp3_utils.Plo \
	./$(DEPDIR)/libsplt_mp3_la-silence_processors.Plo \
	./$(DEPDIR)/libsplt_ogg_la-ogg.Plo \
	./$(DEPDIR)/libsplt_ogg_la-ogg_new_stream_handler.Plo \
	./$(DEPDIR)/libsplt_ogg_la-ogg_silence.Plo \
	./$(DEPDIR)/libsplt_ogg_la-ogg_utils.Plo \
	./$(DEPDIR)/libsplt_ogg_la-silence_processors.Plo
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libsplt_flac_la_SOURCES) $(libsplt_mp3_la_SOURCES) \
	$(libsplt_ogg_la_SOURCES)
DIST_SOURCES = $(am__libsplt_flac_la_SOURCES_DIST) \
	$(am__libsplt_mp3_la_SOURCES_DIST) \
	$(am__libsplt_ogg_la_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
am__DIST_COMMON = $(srcdir)/Makefile.in \
	$(top_srcdir)/libltdl/config/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} '/home/l1/Desktop/Thesis/Subjects/mp3splt/libmp3splt/libltdl/config/missing' aclocal-1.16
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AS = as
AUTOCONF = ${SHELL} '/home/l1/Desktop/Thesis/Subjects/mp3splt/libmp3splt/libltdl/config/missing' autoconf
AUTOHEADER = ${SHELL} '/home/l1/Desktop/Thesis/Subjects/mp3splt/libmp3splt/libltdl/config/missing' autoheader
AUTOMAKE = ${SHELL} '/home/l1/Desktop/Thesis/Subjects/mp3splt/libmp3splt/libltdl/config/missing' automake-1.16
AWK = mawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -O3 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64
CPP = gcc -E
CPPFLAGS = 
CSCOPE = cscope
CTAGS = ctags
CUTTER = 
CUTTER_CFLAGS = 
CUTTER_LIBS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DOXYGEN = /usr/bin/doxygen
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
ETAGS = etags
EXEEXT = 
FGREP = /usr/bin/grep -F
FLAC_CFLAGS = -I/usr/local/include
FLAC_LIBS = -L/usr/local/lib -lFLAC
GETTEXT_MACRO_VERSION = 0.20
GMSGFMT = /usr/bin/msgfmt
GMSGFMT_015 = /usr/bin/msgfmt
GRAPHVIZ = /usr/bin/dot
GREP = /usr/bin/grep
ID3_CFLAGS = -I/home/l1/Desktop/Thesis/Subjects/mp3splt/libmp3splt/target/include
ID3_LIBS = -L/home/l1/Desktop/Thesis/Subjects/mp3splt/libmp3splt/target/lib -lid3tag
INCLTDL = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INTLLIBS = 
INTL_MACOSX_LIBS = 
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBADD_DL =  
LIBADD_DLD_LINK = 
LIBADD_DLOPEN = 
LIBADD_SHL_LOAD = 
LIBICONV = -liconv
LIBINTL = 
LIBLTDL = -lltdl
LIBMP3SPLT_MAJOR_VERSION = 0
LIBMP3SPLT_MICRO_VERSION = 3.1518
LIBMP3SPLT_MINOR_VERSION = 9
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTDLDEPS = 
LTDLINCL = 
LTDLOPEN = libltdl
LTLIBICONV = -liconv
LTLIBINTL = 
LTLIBOBJS = 
LT_ARGZ_H = 
LT_CONFIG_H = config.h
LT_DLLOADERS =  libltdl/dlopen.la
LT_DLPREOPEN = -dlpreopen libltdl/dlopen.la 
LT_SYS_LIBRARY_PATH = 
MAD_CFLAGS = -I/home/l1/Desktop/Thesis/Subjects/mp3splt/libmp3splt/target/include
MAD_LIBS = -L/home/l1/Desktop/Thesis/Subjects/mp3splt/libmp3splt/target/lib -lmad
MAINT = 
MAKEINFO = ${SHELL} '/home/l1/Desktop/Thesis/Subjects/mp3splt/libmp3splt/libltdl/config/missing' makeinfo
MANIFEST_TOOL = :
MKDIR_P = /usr/bin/mkdir -p
MSGFMT = /usr/bin/msgfmt
MSGMERGE = /usr/bin/msgmerge
MSGMERGE_FOR_MSGFMT_OPTION = --for-msgfmt
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OGG_CFLAGS = -I/home/l1/Desktop/Thesis/Subjects/mp3splt/libmp3splt/target/include
OGG_LIBS = -L/home/l1/Desktop/Thesis/Subjects/mp3splt/libmp3splt/target/lib -logg
OTOOL = 
OTOOL64 = 
PACKAGE = libmp3splt
PACKAGE_BUGREPORT = m@ioalex.net
PACKAGE_NAME = libmp3splt
PACKAGE_STRING = libmp3splt 0.9.3.1518
PACKAGE_TARNAME = libmp3splt
PACKAGE_URL = 
PACKAGE_VERSION = 0.9.3.1518
PATH_SEPARATOR = :
PCRE_CFLAGS = 
PCRE_LIBS = -lpcre
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
POSUB = po
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/bash
SONAME = 0
STRIP = strip
USE_NLS = yes
VERSION = 0.9.3.1518
VORBISENC_LIBS = -lvorbisenc
VORBISFILE_LIBS = -lvorbisfile
VORBIS_CFLAGS = -I/home/l1/Desktop/Thesis/Subjects/mp3splt/libmp3splt/target/include
VORBIS_LIBS = -L/home/l1/Desktop/Thesis/Subjects/mp3splt/libmp3splt/target/lib -lvorbis -lm
XGETTEXT = /usr/bin/xgettext
XGETTEXT_015 = /usr/bin/xgettext
XGETTEXT_EXTRA_OPTIONS = 
abs_builddir = /home/l1/Desktop/Thesis/Subjects/mp3splt/libmp3splt/plugins
abs_srcdir = /home/l1/Desktop/Thesis/Subjects/mp3splt/libmp3splt/plugins
abs_top_builddir = /home/l1/Desktop/Thesis/Subjects/mp3splt/libmp3splt
abs_top_srcdir = /home/l1/Desktop/Thesis/Subjects/mp3splt/libmp3splt
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/l1/Desktop/Thesis/Subjects/mp3splt/libmp3splt/libltdl/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
ltdl_LIBOBJS =  lt__strl.o
ltdl_LTLIBOBJS =  lt__strl.lo
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /home/l1/Desktop/Thesis/Subjects/mp3splt/libmp3splt/target
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
subdirs =  libltdl
sys_symbol_underscore = no
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
plugindir = $(libdir)/libmp3splt$(SONAME)
plugin_LTLIBRARIES = $(am__append_2) $(am__append_5) $(am__append_6)

#ccommon_LDFLAGS = -module -export-dynamic -avoid-version
common_CPPFLAGS = -I$(top_srcdir)/include/libmp3splt -I$(top_srcdir)/src
common_LDFLAGS = -L$(top_builddir)/src -L$(top_builddir)/src/.libs \
	-no-undefined -lm -lmp3splt  $(am__append_1)
libsplt_mp3_la_SOURCES = mp3.c mp3.h mp3_silence.c mp3_silence.h mp3_utils.c mp3_utils.h \
silence_processors.c silence_processors.h

libsplt_mp3_la_CPPFLAGS = $(common_CPPFLAGS) \
	-I/home/l1/Desktop/Thesis/Subjects/mp3splt/libmp3splt/target/include $(am__append_3) $(am__append_4)
libsplt_mp3_la_LDFLAGS = $(common_LDFLAGS) -L/home/l1/Desktop/Thesis/Subjects/mp3splt/libmp3splt/target/lib -lmad
libsplt_mp3_la_LIBADD = -L/home/l1/Desktop/Thesis/Subjects/mp3splt/libmp3splt/target/lib -lid3tag
libsplt_ogg_la_SOURCES = ogg.c ogg.h ogg_silence.c ogg_silence.h ogg_utils.c ogg_utils.h \
silence_processors.c silence_processors.h ogg_new_stream_handler.c ogg_new_stream_handler.h

libsplt_ogg_la_CPPFLAGS = $(common_CPPFLAGS) -I/home/l1/Desktop/Thesis/Subjects/mp3splt/libmp3splt/target/include -I/home/l1/Desktop/Thesis/Subjects/mp3splt/libmp3splt/target/include
libsplt_ogg_la_LDFLAGS = $(common_LDFLAGS) -lvorbisfile -L/home/l1/Desktop/Thesis/Subjects/mp3splt/libmp3splt/target/lib -lvorbis -lm -L/home/l1/Desktop/Thesis/Subjects/mp3splt/libmp3splt/target/lib -logg 
libsplt_flac_la_SOURCES = flac_frame_reader.c flac_frame_reader.h flac_utils.c flac_utils.h \
from_flac_library.c from_flac_library.h flac.c flac.h flac_metadata_utils.c flac_metadata_utils.h \
flac_metadata.c flac_metadata.h flac_tags.c flac_tags.h flac_silence.c flac_silence.h \
silence_processors.c silence_processors.h md5.c md5.h flac_md5_decoder.c flac_md5_decoder.h

libsplt_flac_la_CPPFLAGS = $(common_CPPFLAGS) -I/usr/local/include
libsplt_flac_la_LDFLAGS = $(common_LDFLAGS) -L/usr/local/lib -lFLAC
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu plugins/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu plugins/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

install-pluginLTLIBRARIES: $(plugin_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(plugin_LTLIBRARIES)'; test -n "$(plugindir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(plugindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(plugindir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(plugindir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(plugindir)"; \
	}

uninstall-pluginLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(plugin_LTLIBRARIES)'; test -n "$(plugindir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(plugindir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(plugindir)/$$f"; \
	done

clean-pluginLTLIBRARIES:
	-test -z "$(plugin_LTLIBRARIES)" || rm -f $(plugin_LTLIBRARIES)
	@list='$(plugin_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libsplt_flac.la: $(libsplt_flac_la_OBJECTS) $(libsplt_flac_la_DEPENDENCIES) $(EXTRA_libsplt_flac_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libsplt_flac_la_LINK) $(am_libsplt_flac_la_rpath) $(libsplt_flac_la_OBJECTS) $(libsplt_flac_la_LIBADD) $(LIBS)

libsplt_mp3.la: $(libsplt_mp3_la_OBJECTS) $(libsplt_mp3_la_DEPENDENCIES) $(EXTRA_libsplt_mp3_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libsplt_mp3_la_LINK) $(am_libsplt_mp3_la_rpath) $(libsplt_mp3_la_OBJECTS) $(libsplt_mp3_la_LIBADD) $(LIBS)

libsplt_ogg.la: $(libsplt_ogg_la_OBJECTS) $(libsplt_ogg_la_DEPENDENCIES) $(EXTRA_libsplt_ogg_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libsplt_ogg_la_LINK) $(am_libsplt_ogg_la_rpath) $(libsplt_ogg_la_OBJECTS) $(libsplt_ogg_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libsplt_flac_la-flac.Plo # am--include-marker
include ./$(DEPDIR)/libsplt_flac_la-flac_frame_reader.Plo # am--include-marker
include ./$(DEPDIR)/libsplt_flac_la-flac_md5_decoder.Plo # am--include-marker
include ./$(DEPDIR)/libsplt_flac_la-flac_metadata.Plo # am--include-marker
include ./$(DEPDIR)/libsplt_flac_la-flac_metadata_utils.Plo # am--include-marker
include ./$(DEPDIR)/libsplt_flac_la-flac_silence.Plo # am--include-marker
include ./$(DEPDIR)/libsplt_flac_la-flac_tags.Plo # am--include-marker
include ./$(DEPDIR)/libsplt_flac_la-flac_utils.Plo # am--include-marker
include ./$(DEPDIR)/libsplt_flac_la-from_flac_library.Plo # am--include-marker
include ./$(DEPDIR)/libsplt_flac_la-md5.Plo # am--include-marker
include ./$(DEPDIR)/libsplt_flac_la-silence_processors.Plo # am--include-marker
include ./$(DEPDIR)/libsplt_mp3_la-mp3.Plo # am--include-marker
include ./$(DEPDIR)/libsplt_mp3_la-mp3_silence.Plo # am--include-marker
include ./$(DEPDIR)/libsplt_mp3_la-mp3_utils.Plo # am--include-marker
include ./$(DEPDIR)/libsplt_mp3_la-silence_processors.Plo # am--include-marker
include ./$(DEPDIR)/libsplt_ogg_la-ogg.Plo # am--include-marker
include ./$(DEPDIR)/libsplt_ogg_la-ogg_new_stream_handler.Plo # am--include-marker
include ./$(DEPDIR)/libsplt_ogg_la-ogg_silence.Plo # am--include-marker
include ./$(DEPDIR)/libsplt_ogg_la-ogg_utils.Plo # am--include-marker
include ./$(DEPDIR)/libsplt_ogg_la-silence_processors.Plo # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

libsplt_flac_la-flac_frame_reader.lo: flac_frame_reader.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplt_flac_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsplt_flac_la-flac_frame_reader.lo -MD -MP -MF $(DEPDIR)/libsplt_flac_la-flac_frame_reader.Tpo -c -o libsplt_flac_la-flac_frame_reader.lo `test -f 'flac_frame_reader.c' || echo '$(srcdir)/'`flac_frame_reader.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libsplt_flac_la-flac_frame_reader.Tpo $(DEPDIR)/libsplt_flac_la-flac_frame_reader.Plo
#	$(AM_V_CC)source='flac_frame_reader.c' object='libsplt_flac_la-flac_frame_reader.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplt_flac_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsplt_flac_la-flac_frame_reader.lo `test -f 'flac_frame_reader.c' || echo '$(srcdir)/'`flac_frame_reader.c

libsplt_flac_la-flac_utils.lo: flac_utils.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplt_flac_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsplt_flac_la-flac_utils.lo -MD -MP -MF $(DEPDIR)/libsplt_flac_la-flac_utils.Tpo -c -o libsplt_flac_la-flac_utils.lo `test -f 'flac_utils.c' || echo '$(srcdir)/'`flac_utils.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libsplt_flac_la-flac_utils.Tpo $(DEPDIR)/libsplt_flac_la-flac_utils.Plo
#	$(AM_V_CC)source='flac_utils.c' object='libsplt_flac_la-flac_utils.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplt_flac_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsplt_flac_la-flac_utils.lo `test -f 'flac_utils.c' || echo '$(srcdir)/'`flac_utils.c

libsplt_flac_la-from_flac_library.lo: from_flac_library.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplt_flac_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsplt_flac_la-from_flac_library.lo -MD -MP -MF $(DEPDIR)/libsplt_flac_la-from_flac_library.Tpo -c -o libsplt_flac_la-from_flac_library.lo `test -f 'from_flac_library.c' || echo '$(srcdir)/'`from_flac_library.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libsplt_flac_la-from_flac_library.Tpo $(DEPDIR)/libsplt_flac_la-from_flac_library.Plo
#	$(AM_V_CC)source='from_flac_library.c' object='libsplt_flac_la-from_flac_library.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplt_flac_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsplt_flac_la-from_flac_library.lo `test -f 'from_flac_library.c' || echo '$(srcdir)/'`from_flac_library.c

libsplt_flac_la-flac.lo: flac.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplt_flac_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsplt_flac_la-flac.lo -MD -MP -MF $(DEPDIR)/libsplt_flac_la-flac.Tpo -c -o libsplt_flac_la-flac.lo `test -f 'flac.c' || echo '$(srcdir)/'`flac.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libsplt_flac_la-flac.Tpo $(DEPDIR)/libsplt_flac_la-flac.Plo
#	$(AM_V_CC)source='flac.c' object='libsplt_flac_la-flac.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplt_flac_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsplt_flac_la-flac.lo `test -f 'flac.c' || echo '$(srcdir)/'`flac.c

libsplt_flac_la-flac_metadata_utils.lo: flac_metadata_utils.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplt_flac_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsplt_flac_la-flac_metadata_utils.lo -MD -MP -MF $(DEPDIR)/libsplt_flac_la-flac_metadata_utils.Tpo -c -o libsplt_flac_la-flac_metadata_utils.lo `test -f 'flac_metadata_utils.c' || echo '$(srcdir)/'`flac_metadata_utils.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libsplt_flac_la-flac_metadata_utils.Tpo $(DEPDIR)/libsplt_flac_la-flac_metadata_utils.Plo
#	$(AM_V_CC)source='flac_metadata_utils.c' object='libsplt_flac_la-flac_metadata_utils.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplt_flac_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsplt_flac_la-flac_metadata_utils.lo `test -f 'flac_metadata_utils.c' || echo '$(srcdir)/'`flac_metadata_utils.c

libsplt_flac_la-flac_metadata.lo: flac_metadata.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplt_flac_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsplt_flac_la-flac_metadata.lo -MD -MP -MF $(DEPDIR)/libsplt_flac_la-flac_metadata.Tpo -c -o libsplt_flac_la-flac_metadata.lo `test -f 'flac_metadata.c' || echo '$(srcdir)/'`flac_metadata.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libsplt_flac_la-flac_metadata.Tpo $(DEPDIR)/libsplt_flac_la-flac_metadata.Plo
#	$(AM_V_CC)source='flac_metadata.c' object='libsplt_flac_la-flac_metadata.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplt_flac_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsplt_flac_la-flac_metadata.lo `test -f 'flac_metadata.c' || echo '$(srcdir)/'`flac_metadata.c

libsplt_flac_la-flac_tags.lo: flac_tags.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplt_flac_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsplt_flac_la-flac_tags.lo -MD -MP -MF $(DEPDIR)/libsplt_flac_la-flac_tags.Tpo -c -o libsplt_flac_la-flac_tags.lo `test -f 'flac_tags.c' || echo '$(srcdir)/'`flac_tags.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libsplt_flac_la-flac_tags.Tpo $(DEPDIR)/libsplt_flac_la-flac_tags.Plo
#	$(AM_V_CC)source='flac_tags.c' object='libsplt_flac_la-flac_tags.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplt_flac_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsplt_flac_la-flac_tags.lo `test -f 'flac_tags.c' || echo '$(srcdir)/'`flac_tags.c

libsplt_flac_la-flac_silence.lo: flac_silence.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplt_flac_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsplt_flac_la-flac_silence.lo -MD -MP -MF $(DEPDIR)/libsplt_flac_la-flac_silence.Tpo -c -o libsplt_flac_la-flac_silence.lo `test -f 'flac_silence.c' || echo '$(srcdir)/'`flac_silence.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libsplt_flac_la-flac_silence.Tpo $(DEPDIR)/libsplt_flac_la-flac_silence.Plo
#	$(AM_V_CC)source='flac_silence.c' object='libsplt_flac_la-flac_silence.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplt_flac_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsplt_flac_la-flac_silence.lo `test -f 'flac_silence.c' || echo '$(srcdir)/'`flac_silence.c

libsplt_flac_la-silence_processors.lo: silence_processors.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplt_flac_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsplt_flac_la-silence_processors.lo -MD -MP -MF $(DEPDIR)/libsplt_flac_la-silence_processors.Tpo -c -o libsplt_flac_la-silence_processors.lo `test -f 'silence_processors.c' || echo '$(srcdir)/'`silence_processors.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libsplt_flac_la-silence_processors.Tpo $(DEPDIR)/libsplt_flac_la-silence_processors.Plo
#	$(AM_V_CC)source='silence_processors.c' object='libsplt_flac_la-silence_processors.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplt_flac_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsplt_flac_la-silence_processors.lo `test -f 'silence_processors.c' || echo '$(srcdir)/'`silence_processors.c

libsplt_flac_la-md5.lo: md5.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplt_flac_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsplt_flac_la-md5.lo -MD -MP -MF $(DEPDIR)/libsplt_flac_la-md5.Tpo -c -o libsplt_flac_la-md5.lo `test -f 'md5.c' || echo '$(srcdir)/'`md5.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libsplt_flac_la-md5.Tpo $(DEPDIR)/libsplt_flac_la-md5.Plo
#	$(AM_V_CC)source='md5.c' object='libsplt_flac_la-md5.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplt_flac_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsplt_flac_la-md5.lo `test -f 'md5.c' || echo '$(srcdir)/'`md5.c

libsplt_flac_la-flac_md5_decoder.lo: flac_md5_decoder.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplt_flac_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsplt_flac_la-flac_md5_decoder.lo -MD -MP -MF $(DEPDIR)/libsplt_flac_la-flac_md5_decoder.Tpo -c -o libsplt_flac_la-flac_md5_decoder.lo `test -f 'flac_md5_decoder.c' || echo '$(srcdir)/'`flac_md5_decoder.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libsplt_flac_la-flac_md5_decoder.Tpo $(DEPDIR)/libsplt_flac_la-flac_md5_decoder.Plo
#	$(AM_V_CC)source='flac_md5_decoder.c' object='libsplt_flac_la-flac_md5_decoder.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplt_flac_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsplt_flac_la-flac_md5_decoder.lo `test -f 'flac_md5_decoder.c' || echo '$(srcdir)/'`flac_md5_decoder.c

libsplt_mp3_la-mp3.lo: mp3.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplt_mp3_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsplt_mp3_la-mp3.lo -MD -MP -MF $(DEPDIR)/libsplt_mp3_la-mp3.Tpo -c -o libsplt_mp3_la-mp3.lo `test -f 'mp3.c' || echo '$(srcdir)/'`mp3.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libsplt_mp3_la-mp3.Tpo $(DEPDIR)/libsplt_mp3_la-mp3.Plo
#	$(AM_V_CC)source='mp3.c' object='libsplt_mp3_la-mp3.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplt_mp3_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsplt_mp3_la-mp3.lo `test -f 'mp3.c' || echo '$(srcdir)/'`mp3.c

libsplt_mp3_la-mp3_silence.lo: mp3_silence.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplt_mp3_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsplt_mp3_la-mp3_silence.lo -MD -MP -MF $(DEPDIR)/libsplt_mp3_la-mp3_silence.Tpo -c -o libsplt_mp3_la-mp3_silence.lo `test -f 'mp3_silence.c' || echo '$(srcdir)/'`mp3_silence.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libsplt_mp3_la-mp3_silence.Tpo $(DEPDIR)/libsplt_mp3_la-mp3_silence.Plo
#	$(AM_V_CC)source='mp3_silence.c' object='libsplt_mp3_la-mp3_silence.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplt_mp3_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsplt_mp3_la-mp3_silence.lo `test -f 'mp3_silence.c' || echo '$(srcdir)/'`mp3_silence.c

libsplt_mp3_la-mp3_utils.lo: mp3_utils.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplt_mp3_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsplt_mp3_la-mp3_utils.lo -MD -MP -MF $(DEPDIR)/libsplt_mp3_la-mp3_utils.Tpo -c -o libsplt_mp3_la-mp3_utils.lo `test -f 'mp3_utils.c' || echo '$(srcdir)/'`mp3_utils.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libsplt_mp3_la-mp3_utils.Tpo $(DEPDIR)/libsplt_mp3_la-mp3_utils.Plo
#	$(AM_V_CC)source='mp3_utils.c' object='libsplt_mp3_la-mp3_utils.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplt_mp3_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsplt_mp3_la-mp3_utils.lo `test -f 'mp3_utils.c' || echo '$(srcdir)/'`mp3_utils.c

libsplt_mp3_la-silence_processors.lo: silence_processors.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplt_mp3_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsplt_mp3_la-silence_processors.lo -MD -MP -MF $(DEPDIR)/libsplt_mp3_la-silence_processors.Tpo -c -o libsplt_mp3_la-silence_processors.lo `test -f 'silence_processors.c' || echo '$(srcdir)/'`silence_processors.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libsplt_mp3_la-silence_processors.Tpo $(DEPDIR)/libsplt_mp3_la-silence_processors.Plo
#	$(AM_V_CC)source='silence_processors.c' object='libsplt_mp3_la-silence_processors.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplt_mp3_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsplt_mp3_la-silence_processors.lo `test -f 'silence_processors.c' || echo '$(srcdir)/'`silence_processors.c

libsplt_ogg_la-ogg.lo: ogg.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplt_ogg_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsplt_ogg_la-ogg.lo -MD -MP -MF $(DEPDIR)/libsplt_ogg_la-ogg.Tpo -c -o libsplt_ogg_la-ogg.lo `test -f 'ogg.c' || echo '$(srcdir)/'`ogg.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libsplt_ogg_la-ogg.Tpo $(DEPDIR)/libsplt_ogg_la-ogg.Plo
#	$(AM_V_CC)source='ogg.c' object='libsplt_ogg_la-ogg.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplt_ogg_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsplt_ogg_la-ogg.lo `test -f 'ogg.c' || echo '$(srcdir)/'`ogg.c

libsplt_ogg_la-ogg_silence.lo: ogg_silence.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplt_ogg_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsplt_ogg_la-ogg_silence.lo -MD -MP -MF $(DEPDIR)/libsplt_ogg_la-ogg_silence.Tpo -c -o libsplt_ogg_la-ogg_silence.lo `test -f 'ogg_silence.c' || echo '$(srcdir)/'`ogg_silence.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libsplt_ogg_la-ogg_silence.Tpo $(DEPDIR)/libsplt_ogg_la-ogg_silence.Plo
#	$(AM_V_CC)source='ogg_silence.c' object='libsplt_ogg_la-ogg_silence.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplt_ogg_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsplt_ogg_la-ogg_silence.lo `test -f 'ogg_silence.c' || echo '$(srcdir)/'`ogg_silence.c

libsplt_ogg_la-ogg_utils.lo: ogg_utils.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplt_ogg_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsplt_ogg_la-ogg_utils.lo -MD -MP -MF $(DEPDIR)/libsplt_ogg_la-ogg_utils.Tpo -c -o libsplt_ogg_la-ogg_utils.lo `test -f 'ogg_utils.c' || echo '$(srcdir)/'`ogg_utils.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libsplt_ogg_la-ogg_utils.Tpo $(DEPDIR)/libsplt_ogg_la-ogg_utils.Plo
#	$(AM_V_CC)source='ogg_utils.c' object='libsplt_ogg_la-ogg_utils.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplt_ogg_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsplt_ogg_la-ogg_utils.lo `test -f 'ogg_utils.c' || echo '$(srcdir)/'`ogg_utils.c

libsplt_ogg_la-silence_processors.lo: silence_processors.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplt_ogg_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsplt_ogg_la-silence_processors.lo -MD -MP -MF $(DEPDIR)/libsplt_ogg_la-silence_processors.Tpo -c -o libsplt_ogg_la-silence_processors.lo `test -f 'silence_processors.c' || echo '$(srcdir)/'`silence_processors.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libsplt_ogg_la-silence_processors.Tpo $(DEPDIR)/libsplt_ogg_la-silence_processors.Plo
#	$(AM_V_CC)source='silence_processors.c' object='libsplt_ogg_la-silence_processors.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplt_ogg_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsplt_ogg_la-silence_processors.lo `test -f 'silence_processors.c' || echo '$(srcdir)/'`silence_processors.c

libsplt_ogg_la-ogg_new_stream_handler.lo: ogg_new_stream_handler.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplt_ogg_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsplt_ogg_la-ogg_new_stream_handler.lo -MD -MP -MF $(DEPDIR)/libsplt_ogg_la-ogg_new_stream_handler.Tpo -c -o libsplt_ogg_la-ogg_new_stream_handler.lo `test -f 'ogg_new_stream_handler.c' || echo '$(srcdir)/'`ogg_new_stream_handler.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libsplt_ogg_la-ogg_new_stream_handler.Tpo $(DEPDIR)/libsplt_ogg_la-ogg_new_stream_handler.Plo
#	$(AM_V_CC)source='ogg_new_stream_handler.c' object='libsplt_ogg_la-ogg_new_stream_handler.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplt_ogg_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsplt_ogg_la-ogg_new_stream_handler.lo `test -f 'ogg_new_stream_handler.c' || echo '$(srcdir)/'`ogg_new_stream_handler.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES)
installdirs:
	for dir in "$(DESTDIR)$(plugindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-pluginLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/libsplt_flac_la-flac.Plo
	-rm -f ./$(DEPDIR)/libsplt_flac_la-flac_frame_reader.Plo
	-rm -f ./$(DEPDIR)/libsplt_flac_la-flac_md5_decoder.Plo
	-rm -f ./$(DEPDIR)/libsplt_flac_la-flac_metadata.Plo
	-rm -f ./$(DEPDIR)/libsplt_flac_la-flac_metadata_utils.Plo
	-rm -f ./$(DEPDIR)/libsplt_flac_la-flac_silence.Plo
	-rm -f ./$(DEPDIR)/libsplt_flac_la-flac_tags.Plo
	-rm -f ./$(DEPDIR)/libsplt_flac_la-flac_utils.Plo
	-rm -f ./$(DEPDIR)/libsplt_flac_la-from_flac_library.Plo
	-rm -f ./$(DEPDIR)/libsplt_flac_la-md5.Plo
	-rm -f ./$(DEPDIR)/libsplt_flac_la-silence_processors.Plo
	-rm -f ./$(DEPDIR)/libsplt_mp3_la-mp3.Plo
	-rm -f ./$(DEPDIR)/libsplt_mp3_la-mp3_silence.Plo
	-rm -f ./$(DEPDIR)/libsplt_mp3_la-mp3_utils.Plo
	-rm -f ./$(DEPDIR)/libsplt_mp3_la-silence_processors.Plo
	-rm -f ./$(DEPDIR)/libsplt_ogg_la-ogg.Plo
	-rm -f ./$(DEPDIR)/libsplt_ogg_la-ogg_new_stream_handler.Plo
	-rm -f ./$(DEPDIR)/libsplt_ogg_la-ogg_silence.Plo
	-rm -f ./$(DEPDIR)/libsplt_ogg_la-ogg_utils.Plo
	-rm -f ./$(DEPDIR)/libsplt_ogg_la-silence_processors.Plo
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-pluginLTLIBRARIES

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/libsplt_flac_la-flac.Plo
	-rm -f ./$(DEPDIR)/libsplt_flac_la-flac_frame_reader.Plo
	-rm -f ./$(DEPDIR)/libsplt_flac_la-flac_md5_decoder.Plo
	-rm -f ./$(DEPDIR)/libsplt_flac_la-flac_metadata.Plo
	-rm -f ./$(DEPDIR)/libsplt_flac_la-flac_metadata_utils.Plo
	-rm -f ./$(DEPDIR)/libsplt_flac_la-flac_silence.Plo
	-rm -f ./$(DEPDIR)/libsplt_flac_la-flac_tags.Plo
	-rm -f ./$(DEPDIR)/libsplt_flac_la-flac_utils.Plo
	-rm -f ./$(DEPDIR)/libsplt_flac_la-from_flac_library.Plo
	-rm -f ./$(DEPDIR)/libsplt_flac_la-md5.Plo
	-rm -f ./$(DEPDIR)/libsplt_flac_la-silence_processors.Plo
	-rm -f ./$(DEPDIR)/libsplt_mp3_la-mp3.Plo
	-rm -f ./$(DEPDIR)/libsplt_mp3_la-mp3_silence.Plo
	-rm -f ./$(DEPDIR)/libsplt_mp3_la-mp3_utils.Plo
	-rm -f ./$(DEPDIR)/libsplt_mp3_la-silence_processors.Plo
	-rm -f ./$(DEPDIR)/libsplt_ogg_la-ogg.Plo
	-rm -f ./$(DEPDIR)/libsplt_ogg_la-ogg_new_stream_handler.Plo
	-rm -f ./$(DEPDIR)/libsplt_ogg_la-ogg_silence.Plo
	-rm -f ./$(DEPDIR)/libsplt_ogg_la-ogg_utils.Plo
	-rm -f ./$(DEPDIR)/libsplt_ogg_la-silence_processors.Plo
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-pluginLTLIBRARIES

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-am clean \
	clean-generic clean-libtool clean-pluginLTLIBRARIES \
	cscopelist-am ctags ctags-am distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-pluginLTLIBRARIES install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-am uninstall-pluginLTLIBRARIES

.PRECIOUS: Makefile


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
